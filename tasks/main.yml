---
- name: install apache httpd
  yum: name=httpd state=present
  tags:
    - httpd
    - packages

- name: install mod_ssl
  yum: name=mod_ssl state=present
  when: httpd_mod_ssl == true
  tags:
    - httpd
    - ssl
    - packages

- name: install extra apache modules
  yum: name={{ item }} state=present
  with_items: httpd_extra_modules
  tags:
    - httpd
    - packages

- name: configure httpd.conf
  template: src="httpd.conf.{{ ansible_os_family }}{{ ansible_distribution_major_version }}.j2" dest=/etc/httpd/conf/httpd.conf mode=0644 owner=root group=root
  notify: restart httpd
  tags:
    - httpd
    - configuration

- name: configure modules
  template: src="{{ item }}.j2" dest="/etc/httpd/conf.modules.d/{{ item }}" owner=root group=root mode=0644
  with_items:
    - 00-mpm.conf
    - 00-ssl.conf
  when: ansible_distribution_major_version|int > 6
  notify: restart httpd
  tags:
    - httpd
    - configuration

- name: configure conf.d
  template: src="{{ item }}.j2" dest="/etc/httpd/conf.d/{{ item }}" owner=root group=root mode=0644
  with_items:
    - mpm.conf
    - ssl.conf
    - deflate.conf
  notify: restart httpd
  tags:
    - httpd
    - configuration

- name: configure vhost containers
  template: src=vhost.conf.j2 dest="/etc/httpd/conf.d/vhost_{{ item.servername }}.conf" owner=root group=root mode=0644
  with_items: httpd_vhosts
  when: httpd_vhosts is defined and item.servername is defined
  no_log: true
  notify: restart httpd
  tags:
    - httpd
    - configuration

- name: configure vhost include dirs
  file: path="/etc/httpd/conf.d/vhost_{{ item.servername }}.conf.d" state=directory owner=root group=root mode=0755
  with_items: httpd_vhosts
  when: httpd_vhosts is defined and item.servername is defined
  tags:
    - httpd
    - configuration

- name: configure vhost common
  template: src=vhost.common.conf.j2 dest="/etc/httpd/conf.d/vhost_{{ item.servername }}.conf.d/common.conf" owner=root group=root mode=0644
  with_items: httpd_vhosts
  when: httpd_vhosts is defined and item.servername is defined
  no_log: true
  notify: restart httpd
  tags:
    - httpd
    - configuration

- name: configure logrotate for httpd
  template: src=logrotate.j2 dest=/etc/logrotate.d/httpd owner=root group=root mode=0644
  tags:
    - httpd
    - logrotate
    - configuration

- name: configure firewalld for http
  firewalld: zone=public port="{{ httpd_http_port }}/tcp" permanent=true state=enabled
  when: httpd_open_http_port and ansible_distribution_major_version|int > 6
  notify: reload firewall
  tags:
    - httpd
    - firewall
    - configuration

- name: configure firewalld for https
  firewalld: zone=public port="{{ httpd_https_port }}/tcp" permanent=true state=enabled
  when: httpd_open_https_port and ansible_distribution_major_version|int > 6
  notify: reload firewall
  tags:
    - httpd
    - firewall
    - configuration

- name: allow httpd connect db
  seboolean: name=httpd_can_network_connect_db state={{ httpd_can_network_connect_db }} persistent=yes
  when: ansible_selinux.status == 'enabled'
  tags:
    - httpd
    - selinux
    - configuration

- name: allow httpd connect
  seboolean: name=httpd_can_network_connect state={{ httpd_can_network_connect }} persistent=yes
  when: ansible_selinux.status == 'enabled'
  tags:
    - httpd
    - selinux
    - configuration

- name: ensure httpd is enabled and running
  service: name=httpd enabled=yes state=started
  tags:
    - httpd
    - configuration
    - services

- name: configure htcacheclean
  template: src=htcacheclean.sysconfig dest=/etc/sysconfig/htcacheclean mode=0644 owner=root group=root
  notify: restart htcacheclean
  tags:
    - httpd
    - configuration

- name: ensure htcacheclean is enabled and running
  service: name=htcacheclean enabled=yes state=started
  when: httpd_htcacheclean == true
  tags:
    - httpd
    - configuration
    - services
